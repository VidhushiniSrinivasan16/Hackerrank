import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

     
    private static int max = 1000001;
    private static int[] nums=new int[max];
    static void precompute(){
        
        for(int i=0;i<max;++i){
                nums[i]=-1;
            }
        nums[0]=0;nums[1]=1;nums[2]=2;nums[3]=3;
        for(int i = 0;i<max;++i){
            if(nums[i]==-1 || (i>0 && nums[i]>(nums[i-1]+1)))
                nums[i]=nums[i-1]+1;
            for(int j=1; j<=i && (j*i) < max; ++j){
                if(nums[j*i]==-1||nums[j*i]>(nums[i]+1)){
                    nums[j*i]=nums[i]+1;
                }
            }
        }
     }
    static int downToZero(int n) {
        return nums[n];
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));
        precompute();
        int q = Integer.parseInt(scanner.nextLine().trim());
        
        for (int qItr = 0; qItr < q; qItr++) {
            int n = Integer.parseInt(scanner.nextLine().trim());
            
            int result = downToZero(n);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();
    }
}
